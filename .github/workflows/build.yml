name: build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    strategy:
      matrix:
        target:
          - Linux
          - Windows
        include:
          - target: Linux
            os: ubuntu-latest
            artifact: linux64
            build_script: build.sh

          - target: Windows
            os: windows-latest
            artifact: win64
            build_script: build.ps1

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build

      - name: Build swiftshader
        run: ./${{ matrix.build_script }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: swiftshader-${{ matrix.artifact }}
          path: build/${{ matrix.target }}

  release:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Create git tag
        id: create-git-tag
        run: |
          tag="autobuild-$(date -u '+%Y-%m-%d-%H-%M')"
          git tag $tag
          git push origin $tag
          echo "::set-output name=TAG::$tag"
          echo "::set-output name=COMMIT::$(git --git-dir swiftshader/.git rev-parse HEAD)"

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Prepare artifacts
        run: |
          for target in linux64 win64; do
            echo "${{ steps.create-git-tag.outputs.COMMIT }}" > swiftshader-$target/COMMIT
            tar -czf swiftshader-$target.tar.gz swiftshader-$target/*
          done

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh release create ${{ steps.create-git-tag.outputs.TAG }} swiftshader-*.tar.gz \
            -n "google/swiftshader@${{ steps.create-git-tag.outputs.COMMIT }}"
